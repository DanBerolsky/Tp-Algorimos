abro_ar,[Autor: Alfonso],        [Ayuda: abre un archivo]    ,   # encoding="utf8" use eso para solucionar el error.,    #El archivo informacion_por_desarollador era el que generaba ese problema,,    #aprantemente era por que tenia otro codificacion "utf8"
armar_csv_comentarios,[Autor: Alfonso],        [Ayuda: Remueve los comentarios de la funcion y crea el archivo comentarios.csv]     ,    #Declaracion de variables,     #Busco las lineas comentadas y me quedo con una lista de las lineas comentadas,     resto = [i for i in lista if '#' in i],     # Cruzo las lineas comentadas con el cuerpo de la otra funcion para devolver solo las lineas del cuerpo de la,     # funcion que no tienen comentario,     #Itero atraves de las lineas comentadas para encontrar el autor y ayuda,     #me creo el diccionario con los campos que necesito,     #datos_comentarios[nombre_funcion] = {"Nombre del autor":nombre_autor,"informacion de ayuda":nombre_ayuda,"Resto de lineas comentadas":resto},     #Ordeno el diccionario, respecto sus claves,     #comentarios_alfabeto = ordenar_alfabeticamente(datos_comentarios),     #Genero el csv.,     #modulo_csv.armo_csv(comentarios_alfabeto,nombre_archivo, modulo)
armar_csv_funciones,[Autor: Alfonso],        [Ayuda: abre un archivo]    ,    #Declaro variables,     #Abro los modulos,     #Itero a traves de los modulos del txt,             #Busco la linea que comience por def para encontrar el nombre de la funcion, sus parametros y cuerpo,     #Ordeno el diccionario
armo_csv,[Autor: Dan],             [Ayuda: Recibo el nombre de archivo a escribir y la estructura de datos         correspondiente, la cual viene dada por una lista de tuplas,Crea y agrega         informacion dentro del csv]     ,            # Modelo de parametros,             # Une con una coma los elementos de la lista, en una cadena nueva.,             # Genera un nombre diferente para cada modulo, para despues hacer el merge.,             #------------------------------------------------------------------,             #------------------------------------------------------------------,             # Crea/abre el csv recibido por parametro.,                 #Escribo en el csv,         # recorro la lista de tuplas y capturo los datos deseados   ,             #Modelo de parametros,             # Une con una coma los elementos de la lista, en una cadena nueva.,             # Genera un nombre diferente para cada funcion, para despues hacer el merge.,             # Crea/abre el csv recivido por parametro.,                 #Escribo en el csv
autor_ayuda,[Autor: Alfonso],,        [Ayuda: Remueve los comentarios de la funcion    y crea el archivo comentarios.csv]        ,
contar_funciones,,,
leer,[Autor: Alfonso],        [Ayuda: Lee el archivo linea por linea]    ,
leer_csv,[Autor: F] ,        [Ayuda: Hace cosas] ,
lista_comentarios,[Autor: Alfonso],        [Ayuda: Remueve los comentarios de la funcion y crea el archivo comentarios.csv]     ,
main,[Autor: L],        [Ayuda: Es la funcion principal]    ,            #Punto 1,             # Quinto punto
ordenar_alfabeticamente,[Autor: Alfonso],        [Ayuda: Ordena diccionario de mayor a menor, respecto las claves del mismo. Devuelvo lista de tuplas]    ,
quien_invoca_a_quien,,,    # Invoco para leer el csv y que me devuelva un diccionario,     # Me quedo con el nombre de las funciones,     # Recorre las filas y me quedo con la clave (nombre_funcion) y el cuerpo de la funcion,         # Por cada funcion en la lista de funciones itera,             # Cruza los nombres de las funciones y chequea si esta en el cuerpo de otra funcion,             # Cuenta cuantas veces ocurre que una funcion este dentro de ota,             # Si ocurre al menos 1 vez,                 # Si la clave ya existe, agrego otra lista, en caso de que no exista, crea la clave
