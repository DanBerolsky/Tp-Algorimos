es_primo,valor,lib_matematica.py,       [Ayuda: Evlua si el numero recibido es primo o no, devolviendo True en,         caso de serlo, y False en caso contrario.], ,     devolver = True,     if valor <= 1:,         devolver = False,     else:,         divisor = 2,         while (((valor % divisor)!=0) and (divisor <= valor/2)):,             divisor += 1, ,         if divisor <= valor/2:,             devolver = False, ,         return devolver

factorial,n,lib_matematica.py,       [Ayuda: Calcula el factorial de el numero recibido, que debe ser,         mayor o igual a cero], ,     resultado = 1,     for i in range(2, n+1):,         resultado = resultado * i, ,     return resultado

impresiones ,contenido_a_mostrar,muestro_salida.py,    , ,     print(contenido_a_mostrar), ,     return None

mcd,nro_1, nro_2,lib_matematica.py,       [Ayuda: Calcula el MCD entre los dos numeros recibidos, utilizando el,         metodo de Euclides. En caso de no existir MCD, devolverá -1.], ,     if abs(nro_1) < abs(nro_2):,         menor = abs(nro_1),         mayor = abs(nro_2),     else:,         menor = abs(nro_2),         mayor = abs(nro_1), ,         devovler = -1,     elif menor == 0:,         devolver = mayor,         dividendo = mayor,         divisor = menor,         resto = mayor % divisor, ,         while resto != 0:,             dividendo = divisor,             divisor = resto,             resto = dividendo % divisor, ,         devolver = divisor, ,     return devolver

mcm,nro_1, nro_2,lib_matematica.py,       [Ayuda: Calcula el MCM (minimo comun multiplo) entre los dos numeros,         recibidos. En caso de no existir, devolverá -1.,         Para el calculo se utiliza mcm(a,b) = (a*b)/MCD(a,b)],     return (nro_1 * nro_2)//mcd(nro_1, nro_2),     

potencia,base, exponente,lib_matematica.py,

