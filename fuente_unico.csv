Nombre de la funcion 		 Parametros formales 		 Nombre del modulo
		leer_1,						codigo,				programa_principal.py,

Cuerpo de la funcion:


    linea = codigo.readline()

    if linea:
        salida = linea.rstrip("\n")

    else:
        salida = ""

    return print(salida)

Nombre de la funcion 		 Parametros formales 		 Nombre del modulo
		leer,						archivo,				m_generar_archivos_csv.py,

Cuerpo de la funcion:

    
    lineas = [linea.rstrip('\n') for linea in archivo]
    
    return lineas

Nombre de la funcion 		 Parametros formales 		 Nombre del modulo
		abro_ar,						archivo,				m_generar_archivos_csv.py,

Cuerpo de la funcion:

    
    with open(archivo) as archivo_completo:
        
        return leer(archivo_completo)

Nombre de la funcion 		 Parametros formales 		 Nombre del modulo
		leer_py,						archivo,				m_generar_archivos_csv.py,

Cuerpo de la funcion:

    import modulo_csv
    modulos = abro_ar(archivo)
    for modulo in modulos:
        lineas = abro_ar(modulo)
        for linea in lineas:
                  
            if linea.startswith('def '):
                funcion = linea
                index_inicial = lineas.index(funcion) +1
                nombre_funcion = funcion.split('def ')[1].lstrip().split('(')[0]
                parametros = funcion.split('(')[1].lstrip().split(')')[0]
                     
            elif linea.strip().startswith('return'):
                linea_return = linea
                index_final = lineas.index(linea_return) + 1
                cuerpo = lineas[index_inicial:index_final]
                datos = nombre_funcion,parametros,modulo,cuerpo
                modulo_csv.armo_csv(datos)

    return None

Nombre de la funcion 		 Parametros formales 		 Nombre del modulo
		main,						,				m_generar_archivos_csv.py,

Cuerpo de la funcion:



