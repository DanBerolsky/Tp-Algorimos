main,,m_generar_archivos_csv.py,,     leer_py(txt),     , ,     return None
leer_py,archivo,m_generar_archivos_csv.py,    import modulo_csv,     datos = {},     modulos = abro_ar(archivo),     for modulo in modulos:,         lineas = abro_ar(modulo),         for linea in lineas:,                   ,             if linea.startswith('def '):,                 funcion = linea,                 index_inicial = lineas.index(funcion) +1,                 nombre_funcion = funcion.split('def ')[1].lstrip().split('(')[0],                 parametros = funcion.split('(')[1].lstrip().split(')')[0], ,             elif linea.strip().startswith('return'):,                 linea_return = linea,                 index_final = lineas.index(linea_return) + 1,                 cuerpo = lineas[index_inicial:index_final],                 ,                 datos[nombre_funcion] = [parametros,modulo,cuerpo],            ,     funciones_alfabeto = sorted(datos.items(),key = lambda clave: clave[0], reverse = True), ,     return modulo_csv.armo_csv(funciones_alfabeto)
leer_1,codigo,programa_principal.py,,     linea = codigo.readline(), ,     if linea:,         salida = linea.rstrip("\n"), ,     else:,         salida = "", ,     return salida
leer,archivo,m_generar_archivos_csv.py,    ,     """ El comenterario tiene que ser excluido """,     ,     # El comenterario tiene que ser excluido, ,     lineas = [linea.rstrip('\n') for linea in archivo],     ,     return lineas
armo_csv,dic_ordenado,modulo_csv.py,    ,     with open ("fuente_unico.csv","a") as codigo:,         ,         # codigo.write("Nombre de la funcion Parametros formales Nombre del modulo"),        ,         for clave in dic_ordenado:,             ,             nombre_funcion = clave[0],             parametros = clave[1][0],             modulo = clave[1][1],             cuerpo = clave[1][2], ,             funcion = ", ".join(cuerpo), ,             # codigo.write(nombre_funcion+",\t\t\t\t\t\t"+parametros+",\t\t\t\t"+modulo+",\n\n"+"Cuerpo de la funcion:\n\n"+funcion+"\n\n"),             ,             codigo.write(nombre_funcion+","+parametros+","+modulo+","+funcion+"\n"),            ,             """codigo.write(nombre_funcion+","+parametros+","+modulo+","+"\n\n"+funcion+"\n\n") ESTE LO CARGA MAS LIMPIO""",     ,     return None
abro_ar,archivo,m_generar_archivos_csv.py,    ,     with open(archivo) as archivo_completo:,         ,         return leer(archivo_completo)
