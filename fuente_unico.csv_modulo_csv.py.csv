armo_csv,(Estructura_de_datos,nombre_archivo, modulo, lista_modulos_comentarios),modulo_csv.py,,     if nombre_archivo == "fuente_unico.csv":,         ,         lista_modulos_fuente = [[]], ,         for clave in Estructura_de_datos:, ,             nombre_funcion = clave[0],             parametros = clave[1]["Parametros de la funcion"],             modulo = clave[1]["Nombre del modulo"],             cuerpo = clave[1]["Cuerpo de la funcion"],             ,             funcion = ", ".join(cuerpo), ,             archivo_a_escribir = nombre_archivo + "_" + modulo + ".csv",             ,             ,             ya_esta = 0,             index = 0,             ,             while ya_esta == 0 and index <= len(lista_modulos_fuente[0]) - 1:,                 ,                 if lista_modulos_fuente[0][index] == archivo_a_escribir:,                     ya_esta = 1,                 index += 1,             ,             if ya_esta == 0:,                 lista_modulos_fuente[0].append(archivo_a_escribir),             , ,             with open(archivo_a_escribir, "a") as archivo_fuente_unico:,                 ,                 archivo_fuente_unico.write(nombre_funcion+","+parametros+","+modulo+","+funcion+"\n"),         fuente_unico = 1,         merge.ciclar_modulos(lista_modulos_fuente, fuente_unico),         merge.ciclar_modulos(lista_modulos_comentarios, lista_modulos_comentarios), ,     elif nombre_archivo == 'comentarios.csv':,         for elementos in Estructura_de_datos:, ,             nombre_funcion = elementos[0],             nombre_autor = elementos[1]["Nombre del autor"],             nombre_ayuda = elementos[1]["informacion de ayuda"],             resto = elementos[1]["Resto de lineas comentadas"],             funcion = ", ".join(resto), ,             archivo_a_escribir = nombre_archivo + "_" + modulo + ".csv"    , , ,             ,             with open (archivo_a_escribir, "a") as archivo_comentarios:, ,                 archivo_comentarios.write(nombre_funcion + "," + nombre_autor + "," + nombre_ayuda + "," + funcion + "\n") , ,         return archivo_a_escribir
leer_csv,(nombre_csv),modulo_csv.py,    dicc_csv = {},     for linea in open(nombre_csv, 'r').readlines():,         linea = linea.strip().split(','),         dicc_csv[linea[0]] = linea[1:],     return dicc_csv
quien_invoca_a_quien,(),modulo_csv.py,    fuente = 'fuente_unico.csv',     diccionario_csv = leer_csv(fuente),     nombre_funcion = [],     resultado = {}, ,     for fila in diccionario_csv:,         nombre_funcion.append(fila), ,     for fila in diccionario_csv.items():,         clave = fila[0],         cuerpo = fila[1][2:], ,         for funcion in nombre_funcion:, , ,             funciones_en_cuerpo = [s for s in cuerpo if funcion in s], ,             contador = len(funciones_en_cuerpo),             lista_de_invocacion = [funcion, contador], ,             if contador > 0:, ,                 if clave in resultado:,                     resultado[clave].append(lista_de_invocacion),                 else:,                     resultado[clave] = [lista_de_invocacion],         return resultado
