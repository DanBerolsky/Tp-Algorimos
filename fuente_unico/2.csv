buscoAlgo_enCodigoDe;(funcion1, funcion2, csv);arbol_de_invocacion.py;; ;     cuerpo = depurarLineas(funcion2, csv);     contador = 0; ;     for linea in cuerpo:;         if funcion1 + "(" in linea:;             contador += 1; ;     return contador
cantidad_de_espacios;(nombre_funcion);Informacion_por_desarrollador.py;    ;   ;     if 8 + len(nombre_funcion)<33:;         ;         espacios = -1 * (8 + len(nombre_funcion) - 33);     ;     else:;         ;         espacios = 2; ;     return espacios  
capturo_datos;();Informacion_por_desarrollador.py;    ; ;     informacion_deseada = {};     ;     lineas_totales_por_autor = {};     ;     total_linea = 0;     ;     with open("comentarios.csv","rt") as archivo_comentarios:;         ;         linea_archivos_comentarios = archivo_comentarios.readline(); ;         while linea_archivos_comentarios != "":;             ;             linea_a_lista_de_datos = linea_archivos_comentarios.split(",");             ;             nombre_funcion = linea_a_lista_de_datos[0];             ;             autor = linea_a_lista_de_datos[1].lstrip("[").rstrip("]");             ;             informacion_deseada[nombre_funcion] = {"Autor":autor,"Lineas_por_funcion":None};             ;             linea_archivos_comentarios = archivo_comentarios.readline(); ;     with open ("fuente_unico.csv","rt") as archivo_fuente_unico:;         ;         linea_archivos_fuente_unico = archivo_fuente_unico.readline();         ;         while linea_archivos_fuente_unico != "":;             ;             linea_a_lista_de_datos = linea_archivos_fuente_unico.split(",");             ;             contador_lineas = 0; ;             funcion_actual = linea_a_lista_de_datos[0];             ;             total_linea += len(linea_a_lista_de_datos[3:]);             ;             contador_lineas = len(linea_a_lista_de_datos[3:]);             ;             for clave in informacion_deseada.keys():;                 ;                 if clave == funcion_actual:;                     ;                     informacion_deseada[clave]["Lineas_por_funcion"] = contador_lineas;                     ;                     if informacion_deseada[clave]["Autor"] in lineas_totales_por_autor.keys():;                         ;                         lineas_totales_por_autor[informacion_deseada[clave]["Autor"]] += contador_lineas                    ;                     ;                     else:;                         lineas_totales_por_autor[informacion_deseada[clave]["Autor"]] = contador_lineas;             ;             linea_archivos_fuente_unico = archivo_fuente_unico.readline(); ;     porcentajes = {};     ;     for clave in lineas_totales_por_autor.keys():;         ;         porcentajes[clave] = int((lineas_totales_por_autor[clave]/total_linea)*100); ;     datos_finales = sorted(informacion_deseada.items(), key = lambda autor: autor[1]["Autor"]);     ;     return datos_finales,porcentajes
depurarLineas;(funcion, csv);arbol_de_invocacion.py;; ;     dicc = modulo_csv.leer_csv(csv);     cuerpo_de_funcion_limpio = [];     ;     for key in dicc:;         if key == funcion:;             for linea in dicc[key]:;                 if linea.strip("\n \t"):;                     cuerpo_de_funcion_limpio.append(linea); ;     return cuerpo_de_funcion_limpio[2:]
encontrarMain;(csv);arbol_de_invocacion.py;; ;     dicc = modulo_csv.leer_csv(csv);     nombre_de_main = None; ;     with open("programas.txt") as f:;         modulo_de_main = (f.readline()).rstrip(); ;     while not nombre_de_main:;         for key in dicc:;             if dicc[key][1] == modulo_de_main:;                 nombre_de_main = key; ;     return nombre_de_main
escribir_imprimir ;(contenido_a_mostrar,archivo_a_abrir,modalida_de_apertura,escritura);Informacion_por_desarrollador.py;
generarListaNombresFunciones;(csv);arbol_de_invocacion.py;; ;     dicc = modulo_csv.leer_csv(csv);     listaDeNombresDeOtrasFunciones = [key for key in dicc]; ;     return listaDeNombresDeOtrasFunciones
generar_arbol;(funcion, indice, listaDeNombres, csv);arbol_de_invocacion.py;;     a = funcion + " (" + str(num_de_lineas(depurarLineas(funcion, csv))) + ")";     print(a, end="");     contador = 0;     primer_rama = True; ;     for nombre in listaDeNombres:; ;         cant_llamados = buscoAlgo_enCodigoDe(nombre, funcion, csv); ;         if not primer_rama:; ;             if cant_llamados == 1:;                 print(" " * (len(a) + indice), end="");                 print(" --> ", end="");                 generar_arbol(nombre, indice + len(a) + 5, listaDeNombres, csv); ;             elif cant_llamados > 1:;                 for f in range(cant_llamados):;                     print(" " * (len(a) + indice), end="");                     print(" --> ", end="");                     generar_arbol(nombre, indice + len(a) + 5, listaDeNombres, csv); ;             else:;                 contador += 1; ;         else:; ;             if cant_llamados == 1:;                 print(" --> ", end="");                 generar_arbol(nombre, indice + len(a) + 5, listaDeNombres, csv);                 primer_rama = False; ;             elif cant_llamados > 1:;                 print(" --> ", end="");                 generar_arbol(nombre, indice + len(a) + 5, listaDeNombres, csv);                 for f in range(cant_llamados - 1):;                     print(" " * (len(a) + indice), end="");                     print(" --> ", end="");                     generar_arbol(nombre, indice + len(a) + 5, listaDeNombres, csv);                 primer_rama = False; ;             else:;                 contador += 1; ;     if contador == len(listaDeNombres):;         print(""); ; 
num_de_lineas;(cuerpoDeFuncion);arbol_de_invocacion.py;; ;     cantLineas = 0; ;     for linea in cuerpoDeFuncion:;         cantLineas += 1; ;     return cantLineas
participacion_info ;(lista_tuplas_funciones_autor_lineas_por_autor, diccionario_de_porcentajes_por_autores);Informacion_por_desarrollador.py;    ; ;     autor_anterior = None;     ;     titulo = "\n\tInforme de Desarrollo Por Autor\n";     escribir_imprimir(titulo, "participacion.txt", "a", titulo);     ;     for indice in range(len(lista_tuplas_funciones_autor_lineas_por_autor)):     ;         ;         nombre_funcion = lista_tuplas_funciones_autor_lineas_por_autor[indice][0];         ;         autor = lista_tuplas_funciones_autor_lineas_por_autor[indice][1]["Autor"]; ;         lineas_funcion = lista_tuplas_funciones_autor_lineas_por_autor[indice][1]["Lineas_por_funcion"]; ;         porcentaje = diccionario_de_porcentajes_por_autores[autor];         ;         if autor_anterior == None:;             ;             s1 = autor + "\n\n\tFuncion" + 16*" " + "Lineas"+"\n\t" + 33 * "-";             escribir_imprimir(s1, "participacion.txt", "a", "\n" + s1);             ;             espacios = cantidad_de_espacios(nombre_funcion);             s2 = "\t" + nombre_funcion + (" " * espacios) + str(lineas_funcion);             escribir_imprimir(s2, "participacion.txt", "a","\n" + s2 );             ;             contador_lineas_totales = 0;             ;             contador_funciones_totales = 0;             ;             contador_funciones = 0; ;             contador_lineas = 0; ;             porcentaje_anterior = porcentaje; ;             autor_anterior = autor; ;         elif autor_anterior != autor:;             ;             s1 = "\t"+str(contador_funciones) + " Funciones - Lineas\t " + str(contador_lineas) + "  " + str(porcentaje_anterior)+"%\n";             escribir_imprimir(s1, "participacion.txt", "a", "\n" + s1);             ;             s2 = autor +"\n\n\tFuncion"+16*" "+"Lineas\n\t" + 33*"-";             escribir_imprimir(s2, "participacion.txt", "a", "\n" + s2);             ;             espacios = cantidad_de_espacios(nombre_funcion);             s3 = "\t" + nombre_funcion + (" " * espacios) + str(lineas_funcion);             escribir_imprimir(s3, "participacion.txt", "a", "\n" + s3);            ;             contador_funciones = 0; ;             contador_lineas = 0; ;             porcentaje_anterior = porcentaje; ;         else:;             ;             espacios = cantidad_de_espacios(nombre_funcion);             s1 = "\t" + nombre_funcion + " "*espacios + str(lineas_funcion);             escribir_imprimir(s1, "participacion.txt", "a", "\n" + s1); ;         contador_lineas_totales += int(lineas_funcion); ;         contador_funciones_totales += 1; ;         contador_funciones += 1; ;         contador_lineas += int(lineas_funcion); ;         autor_anterior = autor; ;         if indice == len(lista_tuplas_funciones_autor_lineas_por_autor)-1 :;             ;             s1 = "\t"+str(contador_funciones) + " Funciones - Lineas\t " + str(contador_lineas) + "  " + str(porcentaje)+"%\n\n";             escribir_imprimir(s1, "participacion.txt", "a", "\n" + s1);             ;             s2 = "Total: "+ str(contador_funciones_totales) + " Funciones - lineas\t " + str(contador_lineas_totales)+"\n";             escribir_imprimir(s2, "participacion.txt", "a", "\n" + s2);                    ; 
