
Nombre de la función: leer Parametros: archivoModulo: m_generar_archivos_csv.py 
Autor: [Autor: A] Ayuda: Ayuda: Lee el archivo linea por linea Cuerpo: ["       
  lineas = [linea.rstrip('\\n') for linea in archivo]", '         return lineas'
] Comentarios: ['    """El comenterario tiene que ser excluido """', '     #Otro



Nombre de la función: abro_ar Parametros: archivoModulo: m_generar_archivos_csv.
py Autor: [Autor: b] Ayuda: Ayuda: abre un archivo Cuerpo: ['         with open(
archivo) as archivo_completo:', '             return leer(archivo_completo)'] Co



Nombre de la función: ordenar_alfabeticamente Parametros: diccionarioModulo: m_g
enerar_archivos_csv.py Autor: [Autor: b] Ayuda: Ayuda: abre un archivo Cuerpo: [
'         return sorted(diccionario.items()', '    key = lambda clave: clave[0]'



Nombre de la función: armar_csv_funciones Parametros: archivoModulo: m_generar_a
rchivos_csv.py Autor: [Autor: b] Ayuda: Ayuda: abre un archivo Cuerpo: ['    nom
bre_archivo = "fuente_unico.csv"     datos = {}', '    nombre_archivo = "fuente_
unico.csv"     modulos = abro_ar(archivo)', '    nombre_archivo = "fuente_unico.
csv"     ', '    nombre_archivo = "fuente_unico.csv"     for modulo in modulos:'
, '    nombre_archivo = "fuente_unico.csv"         lineas = abro_ar(modulo)', ' 
   nombre_archivo = "fuente_unico.csv" ', '    nombre_archivo = "fuente_unico.cs
v"         for linea in lineas:', '    nombre_archivo = "fuente_unico.csv"      
             ', '    nombre_archivo = "fuente_unico.csv"             if linea.st
artswith(\'def \'):', '    nombre_archivo = "fuente_unico.csv"                 f
uncion = linea', '    nombre_archivo = "fuente_unico.csv"                 index_
inicial = lineas.index(funcion) +1', '    nombre_archivo = "fuente_unico.csv"   
              nombre_funcion = funcion.split(\'def \')[1].lstrip().split(\'(\')[
0]', '    nombre_archivo = "fuente_unico.csv"                 parametros = funci
on.split(\'(\')[1].lstrip().split(\')\')[0]', '    nombre_archivo = "fuente_unic
o.csv" ', '    nombre_archivo = "fuente_unico.csv"             elif linea.strip(
).startswith(\'return\'):', '    nombre_archivo = "fuente_unico.csv"            
     linea_return = linea', '    nombre_archivo = "fuente_unico.csv"            
     index_final = lineas.index(linea_return) + 1', '    nombre_archivo = "fuent
e_unico.csv"                 cuerpo = lineas[index_inicial:index_final]', '    n
ombre_archivo = "fuente_unico.csv"                 cuerpo_sin_comment = armar_cs
v_comentarios(cuerpo', '    nombre_archivo = "fuente_unico.csv"nombre_funcion)',
 '    nombre_archivo = "fuente_unico.csv"                 datos[nombre_funcion] 
= [parametros', '    nombre_archivo = "fuente_unico.csv"modulo', '    nombre_arc
hivo = "fuente_unico.csv"cuerpo_sin_comment]', '    nombre_archivo = "fuente_uni
co.csv" ', '    nombre_archivo = "fuente_unico.csv"     funciones_alfabeto = ord
enar_alfabeticamente(datos)', '    nombre_archivo = "fuente_unico.csv"   ', '   
 nombre_archivo = "fuente_unico.csv"     return modulo_csv.armo_csv(funciones_al
fabeto', '    nombre_archivo = "fuente_unico.csv"nombre_archivo)'] Comentarios: 
['    #Declaro variables', '     #Abro los modulos', '     #Itero a traves de lo
s modulos del txt', '             #Busco la linea que comienze por def para enco
ntrar el nombre de la funcion', ' sus parametros y cuerpo', '     #Ordeno el dic



Nombre de la función: armar_csv_comentarios Parametros: lista_cuerpoModulo: nomb
re_funcion Autor: [Autor: D] Ayuda: Ayuda: Remueve los comentarios de la funcion
 y crea el archivo comentarios.csv Cuerpo: ['m_generar_archivos_csv.py    ', 'm_
generar_archivos_csv.py     comentario_triple = \'\\"\\"\\"\'', "m_generar_archi
vos_csv.py     nombre_archivo = 'comentarios.csv'", 'm_generar_archivos_csv.py  
   autor = "[Autor:"', 'm_generar_archivos_csv.py     ayuda = "[Ayuda:"', 'm_gen
erar_archivos_csv.py     nombre_autor = ""', 'm_generar_archivos_csv.py     nomb
re_ayuda = ""', 'm_generar_archivos_csv.py     resto = []   ', 'm_generar_archiv
os_csv.py     datos_comentarios = {}', 'm_generar_archivos_csv.py ', 'm_generar_
archivos_csv.py     lista = lista_cuerpo    ', 'm_generar_archivos_csv.py     re
sto = [j for j in lineas_comentadas if autor not in j and ayuda not in j]', 'm_g
enerar_archivos_csv.py     cuerpo_sin_comentarios = [x for x in lista if x not i
n lineas_comentadas]', 'm_generar_archivos_csv.py     ', 'm_generar_archivos_csv
.py     for comentarios in lineas_comentadas:', 'm_generar_archivos_csv.py      
   if autor in comentarios:', 'm_generar_archivos_csv.py             nombre_auto
r = comentarios.split(comentario_triple)[1].lstrip().split(comentario_triple)[0]
', 'm_generar_archivos_csv.py         elif ayuda in comentarios:', 'm_generar_ar
chivos_csv.py             nombre_ayuda = comentarios.split(comentario_triple)[1]
.lstrip().split(comentario_triple)[0]', 'm_generar_archivos_csv.py             '
, 'm_generar_archivos_csv.py             datos_comentarios[nombre_funcion] = [no
mbre_autor', 'm_generar_archivos_csv.pynombre_ayuda', 'm_generar_archivos_csv.py
resto]', 'm_generar_archivos_csv.py             ', 'm_generar_archivos_csv.py   
  comentarios_alfabeto = ordenar_alfabeticamente(datos_comentarios)', 'm_generar
_archivos_csv.py     ', 'm_generar_archivos_csv.py     modulo_csv.armo_csv(comen
tarios_alfabeto', 'm_generar_archivos_csv.pynombre_archivo)', 'm_generar_archivo
s_csv.py     ', 'm_generar_archivos_csv.py     return cuerpo_sin_comentarios'] C
omentarios: ['    #Declaracion de variables para simplificar mi existencia', '  
   #Busco las lineas comentadas y me quedo con una lista de las lineas comentada
s', "     lineas_comentadas = [i for i in lista if comentario_triple in i or '#'
 in i]", '     #Busco las lineas que formaran el resto de mi csv', '     #Cruzo 
las lineas comentadas con el cuerpo de la otra funcion para devolver solo las li
neas del cuerpo de la funcion que no tienen comentario', '     #Itero atraves de
 las lineas comentadas para encontrar el autor y ayuda', '             #me creo 
el diccionario con los campos que necesito', '     #ordeno el diccionario', '   


