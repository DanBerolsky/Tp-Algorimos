armar_diccionarios;[Autor: Valentin];        [Ayuda: Imprime la lista de funciones, y da la opción de mostrar información    acerca de cada una.]     ;        #Ciclo a través de las lineas del archivo para añadir a un diccionario los datos de fuente unico;         #que necesito;         #Ídem comentarios
consultar_funciones;[Autor: Valentin];        [Ayuda: Pide un input de nombre de función, y en base a lo ingresado muestra, o la ayuda, comentarios,        parametros y autor de la función, o todo lo relacionado a la misma]        ;    #Pregunto la funcion y la continuo preguntando hasta que el usuario aprete enter;         #Verifico si la funcion ingresada pertenece al diccionario o si es alguna de las funciones propuestas;         if nombre_funcion in diccionario_fuente or funcion == "?todo" or funcion == "#todo" or funcion == "imprimir ?todo":;             #Imprimo la funcion ingresada en base al criterio pedido(?, #);             elif funcion.startswith("#") and funcion != "#todo":;             elif funcion == "?todo" or funcion == "#todo":
generar_lista_total;[Autor: Valentin];        [Ayuda: Genera una lista de listas con los nombres de las funciones ordenadas alfabeticamente]    ;    #Añado los nombres de funciones del diccionario a una lista de listas, para imprimir ordenado;     #Verifico si la ultima lista generada tiene menos de 5 elementos, para formatear espacios y que quede parejo
generar_txt;[Autor: Valentin];        [Ayuda: Genera txt]    ;
imprimir_funciones;[Autor: Valentin];        [Ayuda: Imprime la lista de funciones]    ;
main_consulta_funciones;[Autor: Valentin];        [Ayuda: Modulariza para poder llamar el modulo en el programa principal]    ;
sacar_corchetes;[Autor: Valentin];        [Ayuda: Recibe como parametro una cadena y le saca los corchetes de adelante y atrás]    ;
