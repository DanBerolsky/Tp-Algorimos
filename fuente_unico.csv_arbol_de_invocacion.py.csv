buscoAlgo_enCodigoDe;(funcion1, funcion2, csv);arbol_de_invocacion.py;; ;     cuerpo = depurarLineas(funcion2, csv);     contador = 0; ;     for linea in cuerpo:;         if funcion1 + "(" in linea:;             contador += 1; ;     return contador
depurarLineas;(funcion, csv);arbol_de_invocacion.py;; ;     dicc = modulo_csv.leer_csv(csv);     cuerpo_de_funcion_limpio = [];     ;     for key in dicc:;         if key == funcion:;             for linea in dicc[key]:;                 if linea.strip("\n \t"):;                     cuerpo_de_funcion_limpio.append(linea); ;     return cuerpo_de_funcion_limpio[2:]
encontrarMain;(csv);arbol_de_invocacion.py;; ;     dicc = modulo_csv.leer_csv(csv);     nombre_de_main = None; ;     with open("programas.txt") as f:;         modulo_de_main = (f.readline()).rstrip(); ;     while not nombre_de_main:;         for key in dicc:;             if dicc[key][1] == modulo_de_main:;                 nombre_de_main = key; ;     return nombre_de_main
generarListaNombresFunciones;(csv);arbol_de_invocacion.py;; ;     dicc = modulo_csv.leer_csv(csv);     listaDeNombresDeOtrasFunciones = [key for key in dicc]; ;     return listaDeNombresDeOtrasFunciones
generar_arbol;(funcion, indice, listaDeNombres, csv);arbol_de_invocacion.py;;     a = funcion + " (" + str(num_de_lineas(depurarLineas(funcion, csv))) + ")";     print(a, end="");     contador = 0;     primer_rama = True; ;     for nombre in listaDeNombres:; ;         cant_llamados = buscoAlgo_enCodigoDe(nombre, funcion, csv); ;         if not primer_rama:; ;             if cant_llamados == 1:;                 print(" " * (len(a) + indice), end="");                 print(" --> ", end="");                 generar_arbol(nombre, indice + len(a) + 5, listaDeNombres, csv); ;             elif cant_llamados > 1:;                 for f in range(cant_llamados):;                     print(" " * (len(a) + indice), end="");                     print(" --> ", end="");                     generar_arbol(nombre, indice + len(a) + 5, listaDeNombres, csv); ;             else:;                 contador += 1; ;         else:; ;             if cant_llamados == 1:;                 print(" --> ", end="");                 generar_arbol(nombre, indice + len(a) + 5, listaDeNombres, csv);                 primer_rama = False; ;             elif cant_llamados > 1:;                 print(" --> ", end="");                 generar_arbol(nombre, indice + len(a) + 5, listaDeNombres, csv);                 for f in range(cant_llamados - 1):;                     print(" " * (len(a) + indice), end="");                     print(" --> ", end="");                     generar_arbol(nombre, indice + len(a) + 5, listaDeNombres, csv);                 primer_rama = False; ;             else:;                 contador += 1; ;     if contador == len(listaDeNombres):;         print(""); ; 
num_de_lineas;(cuerpoDeFuncion);arbol_de_invocacion.py;; ;     cantLineas = 0; ;     for linea in cuerpoDeFuncion:;         cantLineas += 1; ;     return cantLineas
